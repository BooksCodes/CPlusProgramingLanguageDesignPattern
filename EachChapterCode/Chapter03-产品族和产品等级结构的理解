书籍第39页

产品等级结构：可以简单理解为，一个产品的各种不同等级（同一产品不同等级）
产品族：在同一个地方的工厂生产的同一等级的不同产品（同一等级不同产品）

代码结构：

class 抽象类（即各个产品的父类，根据产品的种类数确定抽象类的个数）{}

class 抽象工厂类（一个，负责生产所有地点的所有产品）
{
  //虚函数，声明所有抽象类的创建方法，例如：
  virtual Body* createBody()=0;
}
class 具体类:public 抽象类
{
  //实现抽象类中的函数
}
class 具体工厂类:public 抽象工厂类
{
  //实现抽象工厂类中的函数
}


class 其他一些类{}

以上仅是在梳理了书中两个范例之后总结的内容，其普适性和正确性有待证实。
2025年6月7日12:28:48
